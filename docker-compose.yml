version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: expenselocator-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-expenselocator}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-securepassword}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    networks:
      - expenselocator-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ExpenseLocator Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: expenselocator-app
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      NODE_ENV: production
      PORT: 5000
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-securepassword}@postgres:5432/${POSTGRES_DB:-expenselocator}
      
      # Replit Auth Configuration (Required)
      REPLIT_CLIENT_ID: ${REPLIT_CLIENT_ID}
      REPLIT_CLIENT_SECRET: ${REPLIT_CLIENT_SECRET}
      REPLIT_REDIRECT_URI: ${REPLIT_REDIRECT_URI}
      
      # Session Configuration
      SESSION_SECRET: ${SESSION_SECRET:-your-super-secret-session-key-change-this-in-production}
      
      # Application Configuration
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS:-http://localhost:5000,https://your-domain.com}
    volumes:
      - uploads_data:/app/uploads
    ports:
      - "${APP_PORT:-5000}:5000"
    networks:
      - expenselocator-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: expenselocator-nginx
    restart: unless-stopped
    depends_on:
      - app
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    ports:
      - "80:80"
      - "443:443"
    networks:
      - expenselocator-network
    profiles:
      - nginx

volumes:
  postgres_data:
    driver: local
  uploads_data:
    driver: local

networks:
  expenselocator-network:
    driver: bridge